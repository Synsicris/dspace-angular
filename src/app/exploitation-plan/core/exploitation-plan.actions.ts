import { Action } from '@ngrx/store';

import { type } from '../../shared/ngrx/type';


/**
 * For each action type in an action group, make a simple
 * enum object for all of this group's action types.
 *
 * The 'type' utility function coerces strings into string
 * literal types and runs a simple check to guarantee all
 * action types in the application are unique.
 */
export const ExploitationPlanActionTypes = {
  GENERATE_EXPLOITATION_PLAN: type('dspace/exploitationplan/GENERATE_EXPLOITATION_PLAN'),
  GENERATE_EXPLOITATION_PLAN_SUCCESS: type('dspace/exploitationplan/GENERATE_EXPLOITATION_PLAN_SUCCESS'),
  GENERATE_EXPLOITATION_PLAN_ERROR: type('dspace/exploitationplan/GENERATE_EXPLOITATION_PLAN_ERROR'),
  CLEAR_EXPLOITATION_PLAN: type('dspace/exploitationplan/CLEAR_EXPLOITATION_PLAN'),
  INIT_EXPLOITATION_PLAN: type('dspace/exploitationplan/INIT_EXPLOITATION_PLAN'),
  INIT_EXPLOITATION_PLAN_SUCCESS: type('dspace/exploitationplan/INIT_EXPLOITATION_PLAN_SUCCESS'),
  INIT_EXPLOITATION_PLAN_ERROR: type('dspace/exploitationplan/INIT_EXPLOITATION_PLAN_ERROR'),
  NORMALIZE_EXPLOITATION_PLAN_OBJECTS_ON_REHYDRATE: type('dspace/exploitationplan/NORMALIZE_EXPLOITATION_PLAN_OBJECTS_ON_REHYDRATE'),
  RETRIEVE_EXPLOITATION_PLAN: type('dspace/exploitationplan/RETRIEVE_EXPLOITATION_PLAN'),
};

/* tslint:disable:max-classes-per-file */

/**
 * An ngrx action to retrieve Exploitation Plan
 */
export class RetrieveExploitationPlanAction implements Action {
  type = ExploitationPlanActionTypes.RETRIEVE_EXPLOITATION_PLAN;
  payload: {
    projectId: string;
    subprojectId: string;
  };

  /**
   * Create a new RetrieveAllWorkpackagesAction
   *
   * @param projectId
   *    the project'id
   * @param subprojectId
   *    the subproject'id
   */
  constructor(projectId: string, subprojectId: string) {
    this.payload = { projectId, subprojectId };
  }
}

/**
 * An ngrx action to normalize state object on rehydrate
 */
export class NormalizeExploitationPlanObjectsOnRehydrateAction implements Action {
  type = ExploitationPlanActionTypes.NORMALIZE_EXPLOITATION_PLAN_OBJECTS_ON_REHYDRATE;
}

/* tslint:enable:max-classes-per-file */

/**
 * Export a type alias of all actions in this action group
 * so that reducers can easily compose action types
 */
export type ExploitationPlanActions
  = NormalizeExploitationPlanObjectsOnRehydrateAction
  | RetrieveExploitationPlanAction;
