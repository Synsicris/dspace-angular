import { Component, Input, OnInit } from '@angular/core';
import { ExploitationPlanStep } from '../core/models/exploitation-plan-step.model';
import { TranslateService } from '@ngx-translate/core';
import { ExploitationPlanStateService } from '../core/exploitation-plan-state.service';
import { Community } from '../../core/shared/community.model';
import { Item } from '../../core/shared/item.model';
import { ExploitationPlanService } from '../core/exploitation-plan.service';
import { SubmissionFormModel } from '../../core/config/models/config-submission-form.model';
import { Observable } from 'rxjs';

@Component({
  selector: 'ds-exploitation-plan-step',
  templateUrl: './exploitation-plan-step.component.html',
  styleUrls: ['./exploitation-plan-step.component.scss']
})
export class ExploitationPlanStepComponent implements OnInit {

  /**
   * The project id which the subproject belong to
   */
  @Input() public projectId: string;

  /**
   * The exploitation plan step object
   */
  @Input() public exploitationPlanStep: ExploitationPlanStep;

  /**
   * The subproject community which the exploitation Plan belong to
   */
  @Input() subproject: Community;

  /**
   * The form config
   * @type {Observable<SubmissionFormModel>}
   */
  formConfig$: Observable<SubmissionFormModel>;

  constructor(
    protected exploitationPlanService: ExploitationPlanService,
    protected exploitationPlanStateService: ExploitationPlanStateService,
    protected translate: TranslateService
  ) {

  }

  ngOnInit(): void {
  this.formConfig$ = this.exploitationPlanService.getExploitationPlanStepFormConfig(this.exploitationPlanStep.type);
  }

  /**
   * Get exploitation-plan step title
   */
  getStepTitle(): string {
    return this.translate.instant('exploitation-plan.' + this.exploitationPlanStep.type + '.title');
  }

  /**
   * Update exploitation-plan step object from given item
   * @param item
   */
  updateExploitationPlanStep(item: Item) {
    this.exploitationPlanStep = this.exploitationPlanService.updateExploitationPlanStep(item, this.exploitationPlanStep);
    this.exploitationPlanStateService.dispatchUpdateExploitationPlanStep(
      this.exploitationPlanStep.parentId,
      this.exploitationPlanStep
    );
  }
}
