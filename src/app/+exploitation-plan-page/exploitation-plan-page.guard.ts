import { ActivatedRouteSnapshot, Router } from '@angular/router';

import { Observable } from 'rxjs';

import { HasPolicyEditGrantsGuard } from '../core/project/authorization-guards/has-policy-edit-grants.guard';
import { RemoteData } from '../core/data/remote-data';
import { Item } from '../core/shared/item.model';
import { ExploitationPlanService } from '../exploitation-plan/core/exploitation-plan.service';
import { AuthorizationDataService } from '../core/data/feature-authorization/authorization-data.service';
import { ItemDataService } from '../core/data/item-data.service';
import { Injectable } from '@angular/core';

/**
 * Prevent unauthorized activating and loading of routes when the current authenticated user doesn't have edit grants on
 * the given item
 */
@Injectable()
export class ExploitationPlanPageGuard extends HasPolicyEditGrantsGuard {

  constructor(
    protected authorizationService: AuthorizationDataService,
    protected exploitationPlanService: ExploitationPlanService,
    protected itemService: ItemDataService,
    protected router: Router
  ) {
    super(authorizationService, itemService, router);
  }

  protected retrieveItem(route: ActivatedRouteSnapshot): Observable<RemoteData<Item>> {
    return  this.exploitationPlanService.getExploitationPlanFromProjectId(route.params.id);
  }
}
