import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';

import { Observable } from 'rxjs';
import { map, tap } from 'rxjs/operators';

import { RemoteData } from '../core/data/remote-data';
import { Item } from '../core/shared/item.model';
import { getFirstSucceededRemoteDataPayload, redirectOn4xx } from '../core/shared/operators';
import { ImpactPathwayService } from '../core/impact-pathway/impact-pathway.service';
import { Store } from '@ngrx/store';
import { AppState } from '../app.reducer';
import { ProjectDataService } from '../core/project/project-data.service';
import { Community } from '../core/shared/community.model';
import { AuthService } from '../core/auth/auth.service';

@Component({
  selector: 'ipw-dashboard-page',
  styleUrls: ['./exploitation-plan-page.component.scss'],
  templateUrl: './exploitation-plan-page.component.html'
})
export class ExploitationPlanPageComponent implements OnInit {

  /**
   * The project displayed on this page
   */
  exploitationPlanRD$: Observable<RemoteData<Item>>;

  /**
   * The project displayed on this page
   */
  subprojectRD$: Observable<RemoteData<Community>>;

  /**
   * The project displayed on this page
   */
  subprojectUUID$: Observable<string>;

  constructor(
    private authService: AuthService,
    private impactPathwayService: ImpactPathwayService,
    private projectService: ProjectDataService,
    private route: ActivatedRoute,
    private router: Router,
    private store: Store<AppState>
  ) { }

  /**
   * Initialize instance variables
   */
  ngOnInit(): void {
    this.subprojectRD$ = this.route.data.pipe(
      map((data) => data.subproject as RemoteData<Community>),
      redirectOn4xx(this.router, this.authService)
    );

    this.subprojectUUID$ = this.subprojectRD$.pipe(
      getFirstSucceededRemoteDataPayload(),
      map((project: Community) => project.id)
    );

    this.exploitationPlanRD$ = this.route.data.pipe(
      map((data) => data.exploitationPlan as RemoteData<Item>),
      tap((ep) => console.log(ep)),
      redirectOn4xx(this.router, this.authService)
    );
  }
}
